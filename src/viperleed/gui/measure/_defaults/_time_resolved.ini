[measurement_settings]
# Settings of the measurement
# ---------------------------
# measurement_class
#   The measurement class this settings file is for.
# is_continuous
#   Whether the measurement is continuous or triggered time-resolved.
#   Continuous measurements differ from triggered measurements in the
#   fact that devices will attempt to constantly return data during a
#   continuous measurement. In a triggered measurement, devices will
#   only return data after being triggered (at regular intervals) to
#   perform a measurement.
# energy_step_duration
#   The time interval during which measurements are acquired at a
#   certain energy in a time-resolved measurement.
# measurement_interval
#   The time interval between triggered measurements in a time-resolved
#   measurement performed at the same energy.
measurement_class = TimeResolved
is_continuous = False
energy_step_duration = 2000
measurement_interval = 400

[energies]
# Settings of the energy ramp of the measurement
# ----------------------------------------------
# start_energy
#   The energy at which the time-resolved measurement will start.
# delta_energy
#   The energy difference between two measurement steps.
# end_energy
#   The energy at which the time-resolved measurement will end.
# step_profile
#   Shape of the curve to be used to set the next energy. Can be
#   "abrupt", ("abrupt", ), ("linear", nsteps, duration), or a list of
#   (fraction, time, fraction, time, ...). In the latter case,
#   "fraction" is the fraction of delta_energy to be applied at each
#   intermediate step (fraction = 0 means previous energy, fraction = 1
#   means current energy). Also, fraction = 1 should not be explicitly
#   included as the last step (nor should its settle time), as this is
#   added automatically.
# endless
#   Whether the measurement should be endless or not. If True, the
#   time-resolved measurement will return to start_energy upon reaching
#   end_energy. To end an endless measurement one has to abort the
#   measurement.
# constant_energy
#   Whether the energy should be incremented at each step or not. If
#   True the energy will never deviate from the start_energy, which may
#   effectively render the measurement endless.
start_energy = 10
delta_energy = 1
end_energy = 100
step_profile = "abrupt"
endless = False
constant_energy = False

[devices]
# Contains the configuration files of connected controllers and cameras.
# ----------------------------------------------------------------------
# primary_controller
#   The measurement settings of the primary controller. Given as as a
#   tuple, containing the path to the settings.ini as a str and the
#   quantities the controller is supposed to measure as a tuple of str.
#   ('path to ctrl settings', ('quantity 1', 'quantity 2', ...))
# secondary_controllers
#   The measurement settings of the secondary controllers. Given as as a
#   tuple of tuples. Each tuple is associated with a secondary
#   controller and contains the path to the settings.ini as a str and
#   the quantities the controller is supposed to measure as a tuple of
#   str.
#   (('path to ctrl 1 settings', ('quantity 1', 'quantity 2', ...)),
#    ('path to ctrl 2 settings', ('quantity 1', 'quantity 3', ...))
# cameras
#   The measurement settings of the cameras. Given as a tuple of paths
#   as str that lead to the camera settings.ini files.
#   ('path to camera 1 settings', 'path to camera 2 settings', ...)
primary_controller = ()
secondary_controllers = ()
cameras = ()

[measurement_info]
# Non-performance related information about the measurement.
# ----------------------------------------------------------
# started
#   The time at which the measurement started.
# ended
#   The time at which the measurement was concluded.
# suffix
#   A name tag that is appended to the end of the folder name of the
#   measurement once the measurement is concluded and saved. Stored here
#   so that following measurements with the same settings file keep the
#   same tag.
# comments
#   Additional comments added by the user.
# was_aborted
#   Whether the measurement was aborted or not. Only set during a
#   measurement to retain information on how the time-resolved
#   measurement was concluded.
started =
ended =
suffix =
comments =
was_aborted = False
